/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory;
import java.sql.Connection;
import Admins.AdminActivity;
import Main.Admin;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saima
 */
public class brand extends javax.swing.JFrame {

    /**
     * Creates new form brand
     */
    public brand() {
        ImageIcon ic = new ImageIcon(getClass().getResource("/Images/icon_1.png"));
        this.setIconImage(ic.getImage());
        initComponents();
        loadData();
    }

    public void loadData() {
        try {
            
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");
            Statement statement = connection.createStatement();
            ResultSet rs = statement.executeQuery("SELECT  brand_id as BrandId , category_id as CategoryId , brand_name as BrandName , brand_status as BrandStatus FROM brand");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bidField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        add_product = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        backbtn = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dDTable = new javax.swing.JTable();
        name = new javax.swing.JLabel();
        bnameField = new javax.swing.JTextField();
        name1 = new javax.swing.JLabel();
        cidField = new javax.swing.JTextField();
        name2 = new javax.swing.JLabel();
        bstatusField = new javax.swing.JTextField();
        addbrandbtn = new javax.swing.JButton();
        delbrandbtn = new javax.swing.JButton();
        upbrandbtn = new javax.swing.JButton();
        rebrandbtn = new javax.swing.JButton();
        clearbrandbtn = new javax.swing.JButton();
        name3 = new javax.swing.JLabel();
        sortZA = new javax.swing.JButton();
        sortAZ = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        availbr = new javax.swing.JButton();
        showAvailbr = new javax.swing.JTextField();
        priceLH = new javax.swing.JButton();
        priceHL = new javax.swing.JButton();
        expenpro = new javax.swing.JButton();
        cheappro = new javax.swing.JButton();
        ProInStock = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Brand");

        bidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidFieldActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));

        add_product.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        add_product.setForeground(new java.awt.Color(255, 255, 255));
        add_product.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_product.setText("Brand");

        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cross.png"))); // NOI18N
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        backbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/backs.png"))); // NOI18N
        backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(add_product, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(419, 419, 419)
                .addComponent(backbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(logout)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(backbtn)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(add_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        id.setForeground(new java.awt.Color(0, 153, 153));
        id.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        id.setText("Category Id");
        id.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        dDTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Brand Id", "Category Id", "Brand Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dDTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dDTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dDTable);

        name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        name.setForeground(new java.awt.Color(0, 153, 153));
        name.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        name.setText("Brand Id");

        bnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnameFieldActionPerformed(evt);
            }
        });

        name1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        name1.setForeground(new java.awt.Color(0, 153, 153));
        name1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        name1.setText("Brand Name");

        cidField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidFieldActionPerformed(evt);
            }
        });

        name2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        name2.setForeground(new java.awt.Color(0, 153, 153));
        name2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        name2.setText("Brand Status");

        bstatusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bstatusFieldActionPerformed(evt);
            }
        });

        addbrandbtn.setBackground(new java.awt.Color(0, 153, 153));
        addbrandbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        addbrandbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbrandbtn.setText("Add");
        addbrandbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addbrandbtnMouseClicked(evt);
            }
        });

        delbrandbtn.setBackground(new java.awt.Color(0, 153, 153));
        delbrandbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        delbrandbtn.setForeground(new java.awt.Color(255, 255, 255));
        delbrandbtn.setText("Delete");
        delbrandbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delbrandbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                delbrandbtnMouseEntered(evt);
            }
        });

        upbrandbtn.setBackground(new java.awt.Color(0, 153, 153));
        upbrandbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        upbrandbtn.setForeground(new java.awt.Color(255, 255, 255));
        upbrandbtn.setText("Update");
        upbrandbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                upbrandbtnMouseClicked(evt);
            }
        });

        rebrandbtn.setBackground(new java.awt.Color(0, 153, 153));
        rebrandbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        rebrandbtn.setForeground(new java.awt.Color(255, 255, 255));
        rebrandbtn.setText("Refresh");
        rebrandbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rebrandbtnMouseClicked(evt);
            }
        });

        clearbrandbtn.setBackground(new java.awt.Color(0, 153, 153));
        clearbrandbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        clearbrandbtn.setForeground(new java.awt.Color(255, 255, 255));
        clearbrandbtn.setText("Clear");
        clearbrandbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearbrandbtnMouseClicked(evt);
            }
        });

        name3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        name3.setForeground(new java.awt.Color(0, 153, 153));
        name3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        name3.setText("Filters :");

        sortZA.setBackground(new java.awt.Color(0, 153, 153));
        sortZA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sortZA.setForeground(new java.awt.Color(255, 255, 255));
        sortZA.setText("Brand Name (Z-A)");
        sortZA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortZAMouseClicked(evt);
            }
        });
        sortZA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortZAActionPerformed(evt);
            }
        });

        sortAZ.setBackground(new java.awt.Color(0, 153, 153));
        sortAZ.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sortAZ.setForeground(new java.awt.Color(255, 255, 255));
        sortAZ.setText("Brand Name (A-Z)");
        sortAZ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortAZMouseClicked(evt);
            }
        });
        sortAZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortAZActionPerformed(evt);
            }
        });

        searchField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchField.setText("Enter the Brand Name");
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        search.setBackground(new java.awt.Color(0, 153, 153));
        search.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("Search ");
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });

        availbr.setBackground(new java.awt.Color(0, 153, 153));
        availbr.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        availbr.setForeground(new java.awt.Color(255, 255, 255));
        availbr.setText("Available Brand");
        availbr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                availbrMouseClicked(evt);
            }
        });
        availbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availbrActionPerformed(evt);
            }
        });

        showAvailbr.setEditable(false);
        showAvailbr.setBackground(new java.awt.Color(255, 255, 255));
        showAvailbr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        showAvailbr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        showAvailbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAvailbrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(availbr, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showAvailbr, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(availbr, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(showAvailbr))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        priceLH.setBackground(new java.awt.Color(0, 153, 153));
        priceLH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        priceLH.setForeground(new java.awt.Color(255, 255, 255));
        priceLH.setText("Price (Low to High)");
        priceLH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceLHMouseClicked(evt);
            }
        });
        priceLH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceLHActionPerformed(evt);
            }
        });

        priceHL.setBackground(new java.awt.Color(0, 153, 153));
        priceHL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        priceHL.setForeground(new java.awt.Color(255, 255, 255));
        priceHL.setText("Price (High to low)");
        priceHL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priceHLMouseClicked(evt);
            }
        });
        priceHL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceHLActionPerformed(evt);
            }
        });

        expenpro.setBackground(new java.awt.Color(0, 153, 153));
        expenpro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        expenpro.setForeground(new java.awt.Color(255, 255, 255));
        expenpro.setText("Most Expensive Product");
        expenpro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expenproMouseClicked(evt);
            }
        });
        expenpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expenproActionPerformed(evt);
            }
        });

        cheappro.setBackground(new java.awt.Color(0, 153, 153));
        cheappro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cheappro.setForeground(new java.awt.Color(255, 255, 255));
        cheappro.setText("Cheapest Product");
        cheappro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cheapproMouseClicked(evt);
            }
        });
        cheappro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheapproActionPerformed(evt);
            }
        });

        ProInStock.setBackground(new java.awt.Color(0, 153, 153));
        ProInStock.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ProInStock.setForeground(new java.awt.Color(255, 255, 255));
        ProInStock.setText("Product In Stock");
        ProInStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProInStockMouseClicked(evt);
            }
        });
        ProInStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProInStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cidField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(name2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bstatusField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bidField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addbrandbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(delbrandbtn)
                                .addGap(24, 24, 24)
                                .addComponent(upbrandbtn)
                                .addGap(25, 25, 25)
                                .addComponent(rebrandbtn)
                                .addGap(34, 34, 34)
                                .addComponent(clearbrandbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(name3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(search))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sortAZ)
                                        .addGap(43, 43, 43)
                                        .addComponent(sortZA))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(priceLH)
                                        .addGap(38, 38, 38)
                                        .addComponent(priceHL))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 126, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(expenpro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ProInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cheappro, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)))))
                .addContainerGap())
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name)
                            .addComponent(bidField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name1))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id)
                            .addComponent(cidField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bstatusField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(expenpro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cheappro, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ProInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(upbrandbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(delbrandbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addbrandbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rebrandbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(clearbrandbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sortAZ)
                                .addComponent(sortZA))
                            .addComponent(name3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceLH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceHL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(137, 137, 137))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bidFieldActionPerformed

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked

    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked

    }//GEN-LAST:event_jLabel21MouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        Admin admin = new Admin();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void backbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseClicked
        AdminActivity adActivity = new AdminActivity();
        adActivity.setVisible(true);
        dispose();
    }//GEN-LAST:event_backbtnMouseClicked

    private void dDTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dDTableMouseClicked
        // TODO add your handling code here:
        // get the model from the jtable
        DefaultTableModel model = (DefaultTableModel) dDTable.getModel();

        // get the selected row index
        int selectedRowIndex = dDTable.getSelectedRow();

        // set the selected row data into jtextfields
        bidField.setText(model.getValueAt(selectedRowIndex, 0).toString());
        //       cidField.setText(model.getValueAt(selectedRowIndex, 1).toString());
        //       bidField.setText(model.getValueAt(selectedRowIndex, 2).toString());
        bnameField.setText(model.getValueAt(selectedRowIndex, 2).toString());
        cidField.setText(model.getValueAt(selectedRowIndex, 1).toString());
        bstatusField.setText(model.getValueAt(selectedRowIndex, 3).toString());
//        descriptionField.setText(model.getValueAt(selectedRowIndex, 4).toString());
    }//GEN-LAST:event_dDTableMouseClicked

    private void cidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidFieldActionPerformed

    private void bnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bnameFieldActionPerformed

    private void bstatusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bstatusFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bstatusFieldActionPerformed

    private void addbrandbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addbrandbtnMouseClicked
        // TODO add your handling code here:
        String s1 = bidField.getText();
        String s2 = cidField.getText();

        String s3 = bnameField.getText();
        String s4 = bstatusField.getText();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            statement.execute(" insert into brand " + " values ( '" + s1 + "', '" + s2 + "','" + s3 + "' , '" + s4 + "')");

            JOptionPane.showMessageDialog(null, " Saved");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_addbrandbtnMouseClicked

    private void delbrandbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delbrandbtnMouseClicked
        // TODO add your handling code here:
        String s1 = bnameField.getText();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            statement.execute(" delete from brand " + " where brand_name = (  '" + s1 + "')");

            JOptionPane.showMessageDialog(null, "Brand " + s1 + " has been deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Brand named " + s1 + " not found");
        }
    }//GEN-LAST:event_delbrandbtnMouseClicked

    private void delbrandbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delbrandbtnMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_delbrandbtnMouseEntered

    private void upbrandbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upbrandbtnMouseClicked
        // TODO add your handling code here:
        String s1 = bnameField.getText();
        String s2 = bidField.getText();
        String s3 = cidField.getText();
        String s4 = bnameField.getText();
        String s5 = bstatusField.getText();
//        String s8 = descriptionField.getText();
//        String s7 = priceField.getText();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            statement.execute("Update brand set brand_id =" + s2 + ", brand_name =" + " '" + s4 + "' " + " , category_id =" + s3 + " , brand_status =" + " '" + s5 + "' " + "   where brand_name =" + "'" + s1 + "'");

            JOptionPane.showMessageDialog(null, "Data Updated");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_upbrandbtnMouseClicked

    private void rebrandbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rebrandbtnMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("SELECT  brand_id as BrandId ,category_id as CategoryId ,brand_name as BrandName ,brand_status as BrandStatus FROM brand");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);
            JOptionPane.showMessageDialog(null, "Refreshed");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rebrandbtnMouseClicked

    private void clearbrandbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearbrandbtnMouseClicked
        // TODO add your handling code here:
        bnameField.setText("");
        cidField.setText("");
        bidField.setText("");
        bstatusField.setText("");
         showAvailbr.setText("");
    }//GEN-LAST:event_clearbrandbtnMouseClicked

    private void sortZAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortZAMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery(" select * from brand order by brand_name desc ");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sortZAMouseClicked

    private void sortZAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortZAActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_sortZAActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
        String s1 = searchField.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery(" select * from brand " + " where brand_name = (  '" + s1 + "')");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_searchMouseClicked

    private void availbrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_availbrMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery(" select * from brand  " + "where brand_status = 'active' ");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_availbrMouseClicked

    private void availbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availbrActionPerformed
        // TODO add your handling code here:
        try {
            //String sasdast = jComboBox1.getSelectedItem().toString();
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery("select count(brand_id) from brand where  brand_status = 'active'");
            if (rs.next()) {
                showAvailbr.setText(rs.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_availbrActionPerformed

    private void showAvailbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAvailbrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showAvailbrActionPerformed

    private void sortAZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortAZActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortAZActionPerformed

    private void sortAZMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortAZMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery(" select * from brand order by brand_name ");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sortAZMouseClicked

    private void priceLHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceLHMouseClicked
        // TODO add your handling code here:
            try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("    select b.brand_name,p.product_name,p.product_price\n" +
" \n" +
"  from product p\n" +
"  inner join brand b\n" +
"  on b.brand_id=p.brand_id\n" +
"  group by b.brand_name,p.product_name,p.product_price\n" +
"  order by p.product_price   ");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_priceLHMouseClicked

    private void priceLHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceLHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceLHActionPerformed

    private void priceHLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priceHLMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("   select b.brand_name,p.product_name,p.product_price\n" +
" \n" +
"  from product p\n" +
"  inner join brand b\n" +
"  on b.brand_id=p.brand_id\n" +
"  group by b.brand_name,p.product_name,p.product_price\n" +
"  order by p.product_price desc  ");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_priceHLMouseClicked

    private void priceHLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceHLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceHLActionPerformed

    private void expenproMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expenproMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("  select b.brand_name,p.product_name,p.product_price\n" +
" \n" +
"  from product p\n" +
"  inner join brand b\n" +
"  on b.brand_id=p.brand_id\n" +
"  where p.product_price=(SELECT MAX(p.product_price)\n" +
"                FROM product p)");
            ResultSetMetaData  rsmetadata = rs.getMetaData();
            int  columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name=new Vector();
            Vector data_rows=new Vector();
            for(int  i= 1; i < columns+1; i++)
            {
                columns_name.addElement (rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next())
            {
                data_rows = new Vector();
                for (int j = 1; j <columns+1; j++)
                {
                    data_rows.addElement(rs.getString(j)) ;
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_expenproMouseClicked

    private void expenproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expenproActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_expenproActionPerformed

    private void cheapproMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cheapproMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("select b.brand_name,p.product_name,p.product_price\n" +
" \n" +
"  from product p\n" +
"  inner join brand b\n" +
"  on b.brand_id=p.brand_id\n" +
"  where p.product_price=(SELECT MIN(p.product_price)\n" +
"                FROM product p)");
            ResultSetMetaData  rsmetadata = rs.getMetaData();
            int  columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name=new Vector();
            Vector data_rows=new Vector();
            for(int  i= 1; i < columns+1; i++)
            {
                columns_name.addElement (rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next())
            {
                data_rows = new Vector();
                for (int j = 1; j <columns+1; j++)
                {
                    data_rows.addElement(rs.getString(j)) ;
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cheapproMouseClicked

    private void cheapproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheapproActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cheapproActionPerformed

    private void ProInStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProInStockMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("select b.brand_name,SUM(s.quantity_on_stock)  as No_of_product_instock \n" +
"   from\n" +
"  stock s\n" +
"  inner join product p\n" +
"  on  s.product_id=p.product_id\n" +
"  inner join brand b\n" +
"  on b.brand_id=p.brand_id\n" +
"  \n" +
"  group by b.brand_name");
            ResultSetMetaData  rsmetadata = rs.getMetaData();
            int  columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name=new Vector();
            Vector data_rows=new Vector();
            for(int  i= 1; i < columns+1; i++)
            {
                columns_name.addElement (rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next())
            {
                data_rows = new Vector();
                for (int j = 1; j <columns+1; j++)
                {
                    data_rows.addElement(rs.getString(j)) ;
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ProInStockMouseClicked

    private void ProInStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProInStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProInStockActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(brand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(brand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(brand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(brand.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new brand().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ProInStock;
    private javax.swing.JLabel add_product;
    private javax.swing.JButton addbrandbtn;
    private javax.swing.JButton availbr;
    private javax.swing.JLabel backbtn;
    private javax.swing.JTextField bidField;
    private javax.swing.JTextField bnameField;
    private javax.swing.JTextField bstatusField;
    private javax.swing.JButton cheappro;
    private javax.swing.JTextField cidField;
    private javax.swing.JButton clearbrandbtn;
    private javax.swing.JTable dDTable;
    private javax.swing.JButton delbrandbtn;
    private javax.swing.JButton expenpro;
    private javax.swing.JLabel id;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel name;
    private javax.swing.JLabel name1;
    private javax.swing.JLabel name2;
    private javax.swing.JLabel name3;
    private javax.swing.JButton priceHL;
    private javax.swing.JButton priceLH;
    private javax.swing.JButton rebrandbtn;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextField showAvailbr;
    private javax.swing.JButton sortAZ;
    private javax.swing.JButton sortZA;
    private javax.swing.JButton upbrandbtn;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory;

import Admins.AdminActivity;
import Main.Admin;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saima
 */
public class order extends javax.swing.JFrame {

    /**
     * Creates new form order
     */
    public order() {
        initComponents();
                ImageIcon ic = new ImageIcon(getClass().getResource("/Images/icon_1.png"));
        this.setIconImage(ic.getImage());
        loadData();
    }
 public void loadData() {
   try {  
             Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  
             Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");  
   
               Statement statement = connection.createStatement();  
               
             ResultSet rs = statement.executeQuery("SELECT order_id as OrderId , customer_id as CustomerId , order_quantity as OrderQuantity, order_created_date as OrderDate , delivery_date as DeliveryDate , order_status as OrderStatus,payment_status as PaymentStatus  FROM orderr order by order_id");  
             ResultSetMetaData  rsmetadata = rs.getMetaData(); 
              int  columns = rsmetadata.getColumnCount();   
              DefaultTableModel dtm = new DefaultTableModel(); 
              Vector columns_name=new Vector();
              Vector data_rows=new Vector();
              for(int  i= 1; i < columns+1; i++)  
                {             
                        columns_name.addElement (rsmetadata.getColumnLabel(i));  
                }                 
              
              dtm.setColumnIdentifiers(columns_name);
                   while (rs.next())  
           {  
               data_rows = new Vector(); 
               for (int j = 1; j <columns+1; j++)  
               {  
                   data_rows.addElement(rs.getString(j)) ;
               }  
               dtm.addRow(data_rows);  
               
       }   
          dDTable.setModel(dtm); 
             
         } catch (Exception e) {  
             e.printStackTrace();  
         }  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        id = new javax.swing.JLabel();
        id1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dDTable = new javax.swing.JTable();
        name = new javax.swing.JLabel();
        oDateField = new javax.swing.JTextField();
        price = new javax.swing.JLabel();
        oidField = new javax.swing.JTextField();
        dDateField = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        add_product = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        backbtn = new javax.swing.JLabel();
        quantity = new javax.swing.JLabel();
        cuidField = new javax.swing.JTextField();
        oQuantityField = new javax.swing.JTextField();
        quantity1 = new javax.swing.JLabel();
        ostatusField = new javax.swing.JTextField();
        pastatusField = new javax.swing.JTextField();
        quantity2 = new javax.swing.JLabel();
        reorbtn = new javax.swing.JButton();
        uporbtn = new javax.swing.JButton();
        delorbtn = new javax.swing.JButton();
        addorbtn = new javax.swing.JButton();
        clearorbtn = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        numOfOrders = new javax.swing.JButton();
        search1 = new javax.swing.JButton();
        totalamt = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        pending1 = new javax.swing.JButton();
        showPenOr = new javax.swing.JTextField();
        searchcus = new javax.swing.JTextField();
        checkorder = new javax.swing.JButton();
        dateDearchField = new javax.swing.JTextField();
        dateSearch = new javax.swing.JButton();
        checkpay = new javax.swing.JButton();
        searchpay = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Order");

        id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        id.setForeground(new java.awt.Color(0, 153, 153));
        id.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        id.setText("Customer Id");
        id.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        id1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        id1.setForeground(new java.awt.Color(0, 153, 153));
        id1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        id1.setText("Order Id");
        id1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        dDTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "OrderId", "ProductName", "CustomerId", "OrderQuantity", "OrderDate", "DeliveryDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dDTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dDTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dDTable);

        name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        name.setForeground(new java.awt.Color(0, 153, 153));
        name.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        name.setText("Order Quantity");

        oDateField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        oDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oDateFieldActionPerformed(evt);
            }
        });

        price.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        price.setForeground(new java.awt.Color(0, 153, 153));
        price.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        price.setText("Delivery Date");

        oidField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        oidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oidFieldActionPerformed(evt);
            }
        });

        dDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dDateFieldActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));

        add_product.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        add_product.setForeground(new java.awt.Color(255, 255, 255));
        add_product.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_product.setText("Order");

        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/cross.png"))); // NOI18N
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        backbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/backs.png"))); // NOI18N
        backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(add_product, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(416, 416, 416)
                        .addComponent(backbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logout)
                        .addGap(378, 378, 378))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_product, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backbtn)
                            .addComponent(logout, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(1, 1, 1)))
                .addGap(21, 21, 21))
        );

        quantity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantity.setForeground(new java.awt.Color(0, 153, 153));
        quantity.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        quantity.setText("Order Date");

        cuidField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cuidField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuidFieldActionPerformed(evt);
            }
        });

        oQuantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oQuantityFieldActionPerformed(evt);
            }
        });

        quantity1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantity1.setForeground(new java.awt.Color(0, 153, 153));
        quantity1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        quantity1.setText("Order Status");

        ostatusField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ostatusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ostatusFieldActionPerformed(evt);
            }
        });

        pastatusField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pastatusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastatusFieldActionPerformed(evt);
            }
        });

        quantity2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantity2.setForeground(new java.awt.Color(0, 153, 153));
        quantity2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        quantity2.setText("Payment Status");

        reorbtn.setBackground(new java.awt.Color(0, 153, 153));
        reorbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        reorbtn.setForeground(new java.awt.Color(255, 255, 255));
        reorbtn.setText("Refresh");
        reorbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reorbtnMouseClicked(evt);
            }
        });

        uporbtn.setBackground(new java.awt.Color(0, 153, 153));
        uporbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        uporbtn.setForeground(new java.awt.Color(255, 255, 255));
        uporbtn.setText("Update");
        uporbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uporbtnMouseClicked(evt);
            }
        });

        delorbtn.setBackground(new java.awt.Color(0, 153, 153));
        delorbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        delorbtn.setForeground(new java.awt.Color(255, 255, 255));
        delorbtn.setText("Delete");
        delorbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delorbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                delorbtnMouseEntered(evt);
            }
        });

        addorbtn.setBackground(new java.awt.Color(0, 153, 153));
        addorbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        addorbtn.setForeground(new java.awt.Color(255, 255, 255));
        addorbtn.setText("Add");
        addorbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addorbtnMouseClicked(evt);
            }
        });

        clearorbtn.setBackground(new java.awt.Color(0, 153, 153));
        clearorbtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        clearorbtn.setForeground(new java.awt.Color(255, 255, 255));
        clearorbtn.setText("Clear");
        clearorbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearorbtnMouseClicked(evt);
            }
        });

        searchField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchField.setText("Enter the Customer Name");
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        numOfOrders.setBackground(new java.awt.Color(0, 153, 153));
        numOfOrders.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        numOfOrders.setForeground(new java.awt.Color(255, 255, 255));
        numOfOrders.setText("Number of Orders");
        numOfOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                numOfOrdersMouseClicked(evt);
            }
        });

        search1.setBackground(new java.awt.Color(0, 153, 153));
        search1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        search1.setForeground(new java.awt.Color(255, 255, 255));
        search1.setText("Search ");
        search1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search1MouseClicked(evt);
            }
        });
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });

        totalamt.setBackground(new java.awt.Color(0, 153, 153));
        totalamt.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        totalamt.setForeground(new java.awt.Color(255, 255, 255));
        totalamt.setText("Total Amount of Order ");
        totalamt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totalamtMouseClicked(evt);
            }
        });
        totalamt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalamtActionPerformed(evt);
            }
        });

        pending1.setBackground(new java.awt.Color(0, 153, 153));
        pending1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        pending1.setForeground(new java.awt.Color(255, 255, 255));
        pending1.setText("Total Pending Orders");
        pending1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pending1MouseClicked(evt);
            }
        });
        pending1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pending1ActionPerformed(evt);
            }
        });

        showPenOr.setEditable(false);
        showPenOr.setBackground(new java.awt.Color(255, 255, 255));
        showPenOr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        showPenOr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        showPenOr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPenOrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(pending1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showPenOr, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pending1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(showPenOr))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        searchcus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchcus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchcus.setText("Enter the Customer Name");
        searchcus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchcusActionPerformed(evt);
            }
        });

        checkorder.setBackground(new java.awt.Color(0, 153, 153));
        checkorder.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        checkorder.setForeground(new java.awt.Color(255, 255, 255));
        checkorder.setText("Check Order Status");
        checkorder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkorderMouseClicked(evt);
            }
        });
        checkorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkorderActionPerformed(evt);
            }
        });

        dateDearchField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        dateDearchField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dateDearchField.setText("Enter the Delivery Date (YY-MM-DD)");
        dateDearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateDearchFieldActionPerformed(evt);
            }
        });

        dateSearch.setBackground(new java.awt.Color(0, 153, 153));
        dateSearch.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        dateSearch.setForeground(new java.awt.Color(255, 255, 255));
        dateSearch.setText("Search ");
        dateSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateSearchMouseClicked(evt);
            }
        });
        dateSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateSearchActionPerformed(evt);
            }
        });

        checkpay.setBackground(new java.awt.Color(0, 153, 153));
        checkpay.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        checkpay.setForeground(new java.awt.Color(255, 255, 255));
        checkpay.setText("Check Payment Status");
        checkpay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkpayMouseClicked(evt);
            }
        });
        checkpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkpayActionPerformed(evt);
            }
        });

        searchpay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchpay.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchpay.setText("Cash/Credit Card");
        searchpay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchpayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quantity2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pastatusField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(id1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(oidField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantity1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ostatusField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(oDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cuidField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(oQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numOfOrders, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalamt, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(345, 345, 345))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(addorbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(delorbtn)
                        .addGap(24, 24, 24)
                        .addComponent(uporbtn)
                        .addGap(25, 25, 25)
                        .addComponent(reorbtn)
                        .addGap(34, 34, 34)
                        .addComponent(clearorbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkpay)
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchpay, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchcus, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(dateSearch)
                            .addGap(52, 52, 52)
                            .addComponent(dateDearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(search1)
                            .addGap(52, 52, 52)
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(checkorder)
                        .addGap(351, 351, 351)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(numOfOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(totalamt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(oidField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(id1))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(name)
                                            .addComponent(ostatusField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quantity1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cuidField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(oQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(dDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(oDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pastatusField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantity2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(uporbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(delorbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addorbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reorbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearorbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateDearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchcus, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkorder, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchpay, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkpay, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(353, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dDTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dDTableMouseClicked
        // TODO add your handling code here:
        // get the model from the jtable
        DefaultTableModel model = (DefaultTableModel)dDTable.getModel();

        // get the selected row index
        int selectedRowIndex = dDTable.getSelectedRow();

        // set the selected row data into jtextfields
        oidField.setText(model.getValueAt(selectedRowIndex, 0).toString());
        //       cidField.setText(model.getValueAt(selectedRowIndex, 1).toString());
        //       bidField.setText(model.getValueAt(selectedRowIndex, 2).toString());
      
        cuidField.setText(model.getValueAt(selectedRowIndex, 1).toString());
        oQuantityField.setText(model.getValueAt(selectedRowIndex, 2).toString());
        oDateField.setText(model.getValueAt(selectedRowIndex, 3).toString());
        dDateField.setText(model.getValueAt(selectedRowIndex, 4).toString());
          ostatusField.setText(model.getValueAt(selectedRowIndex, 5).toString());
        pastatusField.setText(model.getValueAt(selectedRowIndex, 6).toString());

    }//GEN-LAST:event_dDTableMouseClicked

    private void oDateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oDateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oDateFieldActionPerformed

    private void oidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oidFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oidFieldActionPerformed

    private void dDateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dDateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dDateFieldActionPerformed

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked

    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked

    }//GEN-LAST:event_jLabel21MouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        Admin admin = new Admin();
        admin.setVisible(true);
        dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void backbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseClicked
        AdminActivity adActivity = new AdminActivity();
        adActivity.setVisible(true);
        dispose();
    }//GEN-LAST:event_backbtnMouseClicked

    private void cuidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuidFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuidFieldActionPerformed

    private void oQuantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oQuantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oQuantityFieldActionPerformed

    private void ostatusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ostatusFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ostatusFieldActionPerformed

    private void pastatusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastatusFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pastatusFieldActionPerformed

    private void reorbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reorbtnMouseClicked
        // TODO add your handling code here:
            try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

     ResultSet rs = statement.executeQuery("SELECT order_id as OrderId , customer_id as CustomerId , order_quantity as OrderQuantity, order_created_date as OrderDate , delivery_date as DeliveryDate , order_status as OrderStatus, payment_status as PaymentStatus  FROM orderr order by order_id");  
            ResultSetMetaData  rsmetadata = rs.getMetaData();
            int  columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name=new Vector();
            Vector data_rows=new Vector();
            for(int  i= 1; i < columns+1; i++)
            {
                columns_name.addElement (rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next())
            {
                data_rows = new Vector();
                for (int j = 1; j <columns+1; j++)
                {
                    data_rows.addElement(rs.getString(j)) ;
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);
            JOptionPane.showMessageDialog(null, "Refreshed");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_reorbtnMouseClicked

    private void uporbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uporbtnMouseClicked
        // TODO add your handling code here:
     
        String s1= oidField.getText();
//        String s2=pnameField.getText();
        String s3 = cuidField.getText();
        String s4= oQuantityField.getText();
        String s5= oDateField.getText();
        String s6= dDateField.getText();
         String s7= ostatusField.getText();
        String s8=  pastatusField.getText();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            statement.execute("Update orderr set order_id =" + s1 + ", customer_id =" + s3 + ", order_quantity =" + s4 + " , order_created_date ="+" '"+ s5 +"' "+" , delivery_date ="+" '"+ s6 +"' "+" , order_status ="+" '"+ s7 +"' "+" , payment_status ="+" '"+ s8 +"' "+" where order_id ="+""+ s1+"");

            JOptionPane.showMessageDialog(null, "Data Updated");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_uporbtnMouseClicked

    private void delorbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delorbtnMouseClicked
        // TODO add your handling code here:
       String s1= oidField.getText();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            statement.execute(" delete from orderr "  + " where order_id= (  "+s1+")" );

            JOptionPane.showMessageDialog(null, "Order " + s1 + " has been deleted");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Product named " + s1 + " not found");
        }
    }//GEN-LAST:event_delorbtnMouseClicked

    private void delorbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delorbtnMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_delorbtnMouseEntered

    private void addorbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addorbtnMouseClicked
        // TODO add your handling code here:
    String s1= oidField.getText();
//        String s2=pnameField.getText();
        String s3 = cuidField.getText();
        String s4= oQuantityField.getText();
        String s5= oDateField.getText();
        String s6= dDateField.getText();
         String s7= ostatusField.getText();
        String s8=  pastatusField.getText();

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            statement.execute(" insert into orderr "  + " values ( '"+s1+"', '"+s3+"', '"+s4+"','"+s5+"', '"+s6+"','"+s7+"', '"+s8+"')" );

            JOptionPane.showMessageDialog(null, " Saved");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_addorbtnMouseClicked

    private void clearorbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearorbtnMouseClicked
        // TODO add your handling code here:
         oidField.setText("");
        showPenOr.setText("");
        cuidField.setText("");
        oQuantityField.setText("");
        dDateField.setText("");
         pastatusField.setText("");
        ostatusField.setText("");
        oDateField.setText("");
    }//GEN-LAST:event_clearorbtnMouseClicked

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void numOfOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_numOfOrdersMouseClicked
        // TODO add your handling code here:
       
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("SELECT \n" +
"    c.customer_name , COUNT( *) as NumberOfOrder\n" +
"FROM\n" +
"    customer c\n" +
"    inner join orderr o\n" +
"    on o.customer_id=c.customer_id\n" +
"GROUP BY c.customer_name\n" +
"ORDER BY COUNT(*) DESC; ");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_numOfOrdersMouseClicked

    private void search1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search1MouseClicked
        // TODO add your handling code here:
         String s1= searchField.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("  select o.order_id as OrderId, c.customer_id as CustomerId, c.customer_name as CustomerName,o.order_quantity as OrderQuantity,o.order_created_date as OrderDate , o.delivery_date as DeliveryDate FROM customer c inner join orderr o  on o.customer_id=c.customer_id where c.customer_name = '"+s1+"'");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_search1MouseClicked

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search1ActionPerformed

    private void totalamtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalamtMouseClicked
        // TODO add your handling code here:
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("select c.customer_name, SUM(p.product_price*a.quantity) AS toatlamt\n" +
"from orderr o inner join customer c on o.customer_id=c.customer_id\n" +
"inner join order_product a on a.order_id=o.order_id\n" +
"inner join product p on p.product_id=a.product_id\n" +
"group by c.customer_name\n" +
"order by  SUM(p.product_price*a.quantity) desc ");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_totalamtMouseClicked

    private void totalamtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalamtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalamtActionPerformed

    private void pending1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pending1MouseClicked
        // TODO add your handling code here:
        
         String s1= searchField.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("  SELECT \n" +
"   o.order_id, c.customer_id ,c.customer_name,o.order_status\n" +
"FROM\n" +
"     customer c\n" +
"    inner join orderr o   on o.customer_id=c.customer_id where order_status='pending'");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_pending1MouseClicked

    private void pending1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pending1ActionPerformed
        // TODO add your handling code here:
         try{
            //String sasdast = jComboBox1.getSelectedItem().toString();
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery("SELECT \n" +
"    COUNT(order_status)\n" +
"FROM\n" +
"    orderr where order_status='pending';");
            if (rs.next()) {
                showPenOr.setText(rs.getString(1));
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_pending1ActionPerformed

    private void showPenOrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPenOrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showPenOrActionPerformed

    private void searchcusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchcusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchcusActionPerformed

    private void checkorderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkorderMouseClicked
        // TODO add your handling code here:
         
        String s1= searchcus.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("   select c.customer_name,o.order_status,a.quantity,SUM(a.quantity*p.product_price) as totalpurchase\n" +
"  from customer c inner join orderr o\n" +
"  on c.customer_id=o.customer_id\n" +
"  inner join order_product a\n" +
"  on o.order_id=a.order_id\n" +
"  inner join product p\n" +
"  on a.product_id=p.product_id\n" +
"  where (c.customer_name='"+s1+"')\n" +
"  group by c.customer_name,o.order_status,a.quantity");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_checkorderMouseClicked

    private void checkorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkorderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkorderActionPerformed

    private void dateDearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateDearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateDearchFieldActionPerformed

    private void dateSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateSearchMouseClicked
        // TODO add your handling code here:
              String s1= dateDearchField.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("   \n" +
"select o.order_id,c.customer_name,c.address as city,o.delivery_date\n" +
"  from\n" +
"  customer c inner join orderr o\n" +
"  on c.customer_id=o.customer_id\n" +
"  inner join order_product a\n" +
"  on a.order_id=o.order_id\n" +
"  where o.delivery_date='"+s1+"'");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_dateSearchMouseClicked

    private void dateSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateSearchActionPerformed

    private void checkpayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkpayMouseClicked
        // TODO add your handling code here:
        String s1= searchpay.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=lab11;integratedSecurity=true");

            Statement statement = connection.createStatement();

            ResultSet rs = statement.executeQuery("   select o.order_id, c.customer_name,o.payment_status\n" +
"from customer c inner join orderr o\n" +
"  on c.customer_id=o.customer_id\n" +
"  where o.payment_status = '"+s1+"'");
            ResultSetMetaData rsmetadata = rs.getMetaData();
            int columns = rsmetadata.getColumnCount();
            DefaultTableModel dtm = new DefaultTableModel();
            Vector columns_name = new Vector();
            Vector data_rows = new Vector();
            for (int i = 1; i < columns + 1; i++) {
                columns_name.addElement(rsmetadata.getColumnLabel(i));
            }

            dtm.setColumnIdentifiers(columns_name);
            while (rs.next()) {
                data_rows = new Vector();
                for (int j = 1; j < columns + 1; j++) {
                    data_rows.addElement(rs.getString(j));
                }
                dtm.addRow(data_rows);

            }
            dDTable.setModel(dtm);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_checkpayMouseClicked

    private void checkpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkpayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkpayActionPerformed

    private void searchpayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchpayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchpayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel add_product;
    private javax.swing.JButton addorbtn;
    private javax.swing.JLabel backbtn;
    private javax.swing.JButton checkorder;
    private javax.swing.JButton checkpay;
    private javax.swing.JButton clearorbtn;
    private javax.swing.JTextField cuidField;
    private javax.swing.JTable dDTable;
    private javax.swing.JTextField dDateField;
    private javax.swing.JTextField dateDearchField;
    private javax.swing.JButton dateSearch;
    private javax.swing.JButton delorbtn;
    private javax.swing.JLabel id;
    private javax.swing.JLabel id1;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel name;
    private javax.swing.JButton numOfOrders;
    private javax.swing.JTextField oDateField;
    private javax.swing.JTextField oQuantityField;
    private javax.swing.JTextField oidField;
    private javax.swing.JTextField ostatusField;
    private javax.swing.JTextField pastatusField;
    private javax.swing.JButton pending1;
    private javax.swing.JLabel price;
    private javax.swing.JLabel quantity;
    private javax.swing.JLabel quantity1;
    private javax.swing.JLabel quantity2;
    private javax.swing.JButton reorbtn;
    private javax.swing.JButton search1;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextField searchcus;
    private javax.swing.JTextField searchpay;
    private javax.swing.JTextField showPenOr;
    private javax.swing.JButton totalamt;
    private javax.swing.JButton uporbtn;
    // End of variables declaration//GEN-END:variables
}
